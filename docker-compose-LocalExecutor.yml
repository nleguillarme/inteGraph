version: '2.1'

# volumes:
#   sources_config:
#     external: true

services:

    # neo4j:
    #     build:
    #       context: .
    #       dockerfile: Dockerfile.neo4j
    #       args:
    #         - USER_UID=1001
    #         - USER_GID=1001
    #     image: neo4j-n10s:latest
    #     environment:
    #         - NEO4J_AUTH=none
    #     ports:
    #         - "7474:7474"
    #         - "7687:7687"
    #     volumes:
    #         - ~/.neo4j/data:/data
    #         - ~/.neo4j/import:/var/lib/neo4j/import
    #         - ~/.neo4j/logs:/logs
    #         - ./config/test/dumps:/dumps

    # virtuoso:
    #     image: tenforce/virtuoso:1.3.1-virtuoso7.2.2
    #     environment:
    #       SPARQL_UPDATE: "true"
    #       DEFAULT_GRAPH: "http://www.example.com/my-graph"
    #       VIRT_Parameters_DirsAllowed: "/data/dumps"
    #     volumes:
    #       - ~/.virtuoso:/data
    #       - ./dags_test_data/shared_dir:/data/dumps
    #     ports:
    #       - "8890:8890"

    rdfox:
      image: oxfordsemantic/rdfox
      volumes:
        - ${PWD}/RDFox-data/RDFox.lic:/opt/RDFox/RDFox.lic
        - ${PWD}/rdfox-server-directory:/home/rdfox/.RDFox
      cap_drop:
        - ALL
      ports:
        - "12110:12110"

    # anzograph:
    #     build:
    #           context: .
    #           dockerfile: Dockerfile.anzograph
    #           args:
    #             - USER_UID=1001
    #             - USER_GID=1001
    #     image: cambridgesemantics/anzograph:latest
    #     ports:
    #         - "8081:8080"
    #         - "8443:8443"
    #     volumes:
    #         - ./dags_test_data/:/opt/shared-directory

    # nomer:
    #     build:
    #       context: ${HOME}/workspace/pynomer
    #       #context: https://github.com/nleguillarme/pynomer.git
    #       dockerfile: Dockerfile.server
    #     image: pynomer-server
    #     user: "${USER_ID}:${GROUP_ID}"
    #     ports:
    #         - "9090:9090"
    #     volumes:
    #         - ${NOMER_DIR}:/.nomer

    # nomer:
    #     build:
    #       context: ${HOME}/workspace/pynomer
    #       #context: https://github.com/nleguillarme/pynomer.git
    #       dockerfile: Dockerfile
    #     image: pynomer
    #     user: "${USER_ID}:${GROUP_ID}"
    #     ports:
    #         - "9090:9090"
    #     volumes:
    #         - ${NOMER_DIR}:/.nomer

    postgres:
        image: postgres:9.6
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow

    webserver:
        build:
          context: .
          dockerfile: Dockerfile.airflow
          args:
            - DOCKER_UID=1001
            - DOCKER_GID=999
        image: custom-airflow
        restart: on-failure
        depends_on:
            - postgres
            - rdfox
            # - nomer
        environment:
            - AIRFLOW__CORE__EXECUTOR=LocalExecutor
            - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
            - AIRFLOW__CORE__LOAD_EXAMPLES=False
            - AIRFLOW__SCHEDULER__CATCHUP_BY_DEFAULT=False
            - AIRFLOW__LOGGING__LOGGING_LEVEL=DEBUG
            - AIRFLOW__WEBSERVER__DAG_ORIENTATION=TB
            - AIRFLOW__WEBSERVER__DAG_DEFAULT_VIEW=graph
            - AIRFLOW__WEBSERVER__AUTHENTICATE=False
            - CONFIG_DIR=${CONFIG_DIR}
            - USER_UID=${USER_ID}
            - NOMER_DIR=${NOMER_DIR}
            - BDG_MODE=${BDG_MODE}
            #- AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}"
        volumes:
            - ${CONFIG_DIR}:${CONFIG_DIR}
            - ${PWD}:/opt/airflow/dags
            - ${HOME}/.biodivgraph/logs:/opt/airflow/logs
            - /var/run/docker.sock:/var/run/docker.sock
            - /usr/bin/docker:/usr/bin/docker
            # Uncomment to include custom plugins
            # - ./plugins:/usr/local/airflow/plugins
        ports:
            - "8080:8080"
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3
